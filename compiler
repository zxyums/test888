import React, { useState, useEffect, useRef } from "react";
import { AgGridReact } from "ag-grid-react";
import "ag-grid-community/styles/ag-grid.css";
import "ag-grid-community/styles/ag-theme-alpine.css";
import "ag-grid-enterprise"; // Required for Enterprise features

const PivotAGGrid = () => {
  const gridRef = useRef();

  const [columnDefs, setColumnDefs] = useState([]);
  const [rowData, setRowData] = useState([]);

  useEffect(() => {
    // Step 1: Define Data (Row-Based)
    const data = [
      { field: "Age", name: "John", value: 28 },
      { field: "Age", name: "Alice", value: 25 },
      { field: "City", name: "John", value: "New York" },
      { field: "City", name: "Alice", value: "Los Angeles" }
    ];

    // Step 2: Define Columns (Fixing Count & Row Header)
    const columns = [
      {
        field: "field",
        rowGroup: true,
        headerName: "Field",
        showRowGroup: true, // **Removes count (2) from "Age" & "City"**
      },
      { field: "name", pivot: true, headerName: "Person" }, // Pivot "Name" into columns
      {
        field: "value",
        headerName: "Value", // Custom header
        enableValue: true, // Ensures values appear
        pivotResultColumn: true, // Ensures pivoted data is displayed
        aggFunc: "first", // Ensures correct aggregation of data
        valueFormatter: (params) => params.value ?? "", // Ensures no empty display
        suppressAggFuncInHeader: true, // **Removes "first(Value)" row header**
        headerValueGetter: () => "Value" // **Forces clean "Value" header**
      }
    ];

    setRowData(data);
    setColumnDefs(columns);
  }, []);

  return (
    <div style={{ display: "flex", flexDirection: "column", height: "100vh" }}>
      <div className="ag-theme-alpine" style={{ flexGrow: 1, width: "100%" }}>
        <AgGridReact
          ref={gridRef}
          rowData={rowData}
          columnDefs={columnDefs}
          pivotMode={true} // Enables Pivot Mode
          defaultColDef={{ flex: 1, sortable: true, filter: true, resizable: true }}
          sideBar={true} // Enables Sidebar for Pivot Selection
          autoGroupColumnDef={{ minWidth: 200 }} // Ensures row headers are wide enough
          suppressAggAtRootLevel={true} // Hides aggregation row
        />
      </div>
    </div>
  );
};

export default PivotAGGrid;